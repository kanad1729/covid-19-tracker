{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/img19.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setdailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covidImage","alt","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8e7ae57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({data: {confirmed,deaths,recovered,lastUpdate}})=>{\n\n    if(!confirmed){\n        return \"loading...\"\n    }\n\n    \n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                \n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                            start={0}\n                            end={confirmed.value}\n                            duration={2.5}\n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography  color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of covid 19</Typography>\n                    </CardContent>\n\n                </Grid>\n\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                            start={0}\n                            end={recovered.value}\n                            duration={2.5}\n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography  color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of covid 19</Typography>\n                    </CardContent>\n\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                            start={0}\n                            end={deaths.value}\n                            duration={2.5}\n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography  color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of covid 19</Typography>\n                    </CardContent>\n\n                </Grid>\n                \n\n\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country)=>{\n\n    let changableUrl = url;\n\n    if(country){\n        changableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const {data: {confirmed,deaths,recovered,lastUpdate}} = await axios.get(changableUrl);\n\n        //on above we have use object destructuring\n        \n        // const modifiedData = {\n        //     confirmed: data.confirmed,\n        //     deaths: data.deaths,\n        //     recovered: data.recovered,\n        //     lastUpdate: data.lastUpdate\n        // }\n\n        //by doing object destructuring both of side get same name i.e on key and value so we can use only one name also\n         \n        const modifiedData = {confirmed,deaths,recovered,lastUpdate}\n        return modifiedData;\n        \n    } catch (error) {\n        console.log(error);\n    }\n\n    \n}\n\nexport const fetchDailyData = async ()=>{\n\n    try {\n        \n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData)=>({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n       return modifiedData;\n    } catch (error) {\n        console.log(error);\n        \n    }\n}\n\nexport const fetchCountries = async ()=>{\n\n    try {\n        \n        const {data: {countries}} = await axios.get(`${url}/countries`);\n\n        return countries.map((country)=>country.name)\n        \n\n      \n    } catch (error) {\n        console.log(error);\n        \n    }\n}\n\n\n","import React, {useState, useEffect} from \"react\";\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country})=>{\n    \n    const [dailyData, setdailyData] = useState([])\n\n    useEffect(() => {\n    \n        const fetchAPI = async ()=>{\n\n            setdailyData(await fetchDailyData());\n\n\n        }\n\n        console.log(dailyData)\n        fetchAPI();\n    },[])\n\n    const lineChart = (\n        dailyData.length\n        ?(\n            <Line\n        data={{\n            labels:dailyData.map(({date})=>date),\n            datasets:[{\n                data:dailyData.map(({confirmed})=>confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true\n            }, {\n\n                data:dailyData.map(({deaths})=>deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }]\n        }}\n        />): null \n    );\n\n    const barChart = (\n\n        confirmed\n        ?(\n            <Bar\n                data={{\n                    labels:['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n\n\n                }}\n                options={{\n                    legend: {display: false},\n                    title: {display: true, text:`Current state in ${country}`}\n\n                }}\n            \n            />\n\n        ): null\n\n    );\n\n    return(\n        <div className={styles.container}>\n            {country? barChart : lineChart}\n\n        </div>\n    )\n}\n\nexport default Chart","import React from \"react\";\nimport {useState, useEffect} from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({handleCountryChange})=>{\n\n    const [fetchedCountries, setfetchedCountries] = useState([])\n\n    useEffect(()=>{\n        const fetchAPI = async ()=>{\n\n            setfetchedCountries(await fetchCountries())\n\n        }\n        fetchAPI();\n    },[setfetchedCountries])\n    \n    return(\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n    {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from \"react\";\nimport { Component } from 'react';\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api/index';\n\nimport covidImage from './images/img19.png';\n\nexport default class App extends Component {\n\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount(){\n        \n        const fetchedData = await fetchData();\n\n        this.setState({data: fetchedData});\n        // console.log(fetchedData);\n    }\n\n    handleCountryChange = async(country)=>{\n\n        const fetchedData = await fetchData(country);\n\n        this.setState({data: fetchedData, country:country})\n\n    }\n\n    render() {\n\n        const {data, country} = this.state;\n        return (\n            <div className={styles.container}>\n\n                <img className={styles.image} src={covidImage} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>  \n                \n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App/>, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"CountryPicker_FormControl__1RAyw\"};","module.exports = __webpack_public_path__ + \"static/media/img19.d7265326.png\";"],"sourceRoot":""}